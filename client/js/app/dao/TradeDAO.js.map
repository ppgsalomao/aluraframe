{"version":3,"sources":["../../app-es6/dao/TradeDAO.js"],"names":["Trade","TradeDAO","connection","_connection","_store","trade","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","trades","current","result","push","value","_date","_quantity","_value","continue","name","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,iB,kBAAAA,K;;;;;;;;;;;;;;;;;;;;;gCAEKC,Q;AACT,kCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,QAAd;AACH;;;;yCAEIC,K,EAAO;AAAA;;AACR,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACiB,WADjB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,KAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,SAAL;AAAA,6BAApB;AACAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,oDAAP;AACH,6BAHD;AAKH,yBAZM,CAAP;AAaH;;;2CAEM;AAAA;;AACH,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,QAAD,CADJ,EACe,WADf,EAERC,WAFQ,CAEI,QAFJ,EAGRU,UAHQ,EAAb;;AAKA,gCAAIC,SAAS,EAAb;AACAF,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIU,UAAUN,EAAEC,MAAF,CAASM,MAAvB;AACA,oCAAGD,OAAH,EAAY;AACRD,2CAAOG,IAAP,CAAY,IAAIzB,KAAJ,CAAUuB,QAAQG,KAAR,CAAcC,KAAxB,EAA+BJ,QAAQG,KAAR,CAAcE,SAA7C,EAAwDL,QAAQG,KAAR,CAAcG,MAAtE,CAAZ;AACAN,4CAAQO,QAAR;AACH,iCAHD,MAGO;AACHvB,4CAAQe,MAAR;AACH;AACJ,6BARD;;AAUAF,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAY,WAAWC,EAAEC,MAAF,CAASC,KAAT,CAAeY,IAAtC;AACAvB,uCAAO,mDAAP;AACH,6BAHD;AAIH,yBArBM,CAAP;AAsBH;;;gDAEW;AAAA;;AACR,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,QAAD,CADH,EACc,WADd,EAETC,WAFS,CAEG,QAFH,EAGTqB,KAHS,EAAd;;AAKAvB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,uCAAR,CAAL;AAAA,6BAApB;AACAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAY,WAAWC,EAAEC,MAAF,CAASC,KAAT,CAAeY,IAAtC;AACAvB,uCAAO,qDAAP;AACH,6BAHD;AAIH,yBAXM,CAAP;AAYH","file":"TradeDAO.js","sourcesContent":["import {Trade} from \"../models/Trade.js\";\n\nexport class TradeDAO {\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'trades';\n    }\n\n    save(trade) {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store],'readwrite')\n                .objectStore(this._store)\n                .add(trade);\n\n            request.onsuccess = e => resolve();\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Unexpected error while trying to save a new Trade.');\n            };\n\n        });\n    }\n\n    list() {\n        return new Promise((resolve, reject) => {\n            let cursor = this._connection\n                .transaction(['trades'],'readwrite')\n                .objectStore('trades')\n                .openCursor();\n\n            let trades = [];\n            cursor.onsuccess = e => {\n                let current = e.target.result;\n                if(current) {\n                    trades.push(new Trade(current.value._date, current.value._quantity, current.value._value));\n                    current.continue();\n                } else {\n                    resolve(trades);\n                }\n            };\n\n            cursor.onerror = e => {\n                console.log('Error:' + e.target.error.name);\n                reject('Unexpected error while trying to list all Trades.');\n            };\n        });\n    }\n\n    deleteAll() {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction(['trades'],'readwrite')\n                .objectStore('trades')\n                .clear();\n\n            request.onsuccess = e => resolve('All Trades were deleted successfully.');\n            request.onerror = e => {\n                console.log('Error:' + e.target.error.name);\n                reject('Unexpected error while trying to delete all Trades.');\n            };\n        });\n    }\n}"]}